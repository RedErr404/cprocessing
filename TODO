If you are looking for something to fix mosey over to the helpers folder and run todo.sh,
it is more than full with various issues with examples that are not finished porting, reported bugs, and fixme's and todos in code
in one nice friendly package, yay

If you are looking for somethings to implement, here is a current list of features that I think would be nice
I have some of these things partially done, be transparant and they will be completed faster (it will also get my butt in gear)

All things must be cross platform, I realize the current state of cprocessing is mainly linux but that may change in the future, who knows

make windows installation nicer

implement general image loader

hashmap, arraylist, xml loading, svg

shaders

make compliant w/ new 2.0 syntax

create bugs folder with example of each bug

port to fresher opengl version

vim & sublime text 2 plugins for rapid development

easy make:: modular architecture allowing for selection of which classes to load and graphical or nope

test on windows
test on mac

fix transparency bug, i believe it was disabled due to opengl read textures shit

chrome native client export?? 

PSound implementation




TO COMPILE:
g++ -lcprocessing -lglut -lGLU -lGL `Magick++-config --cppflags --cxxflags --ldflags --libs` Spot.cpp -o Spot

magick has broken makefiles... well I have since I am still learning about them.
you must use the preceeding line to compile programs 

images in general are fucked



--------------------------------------------------------------------

popStyle()	N/A	 restores the prior style settings
pushStyle()	N/A	 saves the current style settings

cursor()	N/A	Changes or shows the mouse cursor.
focused	N/A	

//change this to frameRate
frameRate	framerate	Estimated number of frames per second for the recent past.


noCursor()	N/A	Inhibits the display of the mouse cursor.
online	N/A	
screen	N/A	holds the width, height and pixels of the display.

noTint()	N/A	 reverts to displaying images with their original values
tint()	N/A	 sets the fill value for displaying images

blendColor()	N/A	 returns the blending between two colors
lerpColor()	N/A	 returns a linear interpolation between two colors


curve()	N/A	 Draws a cubic Catmull-Rom curve
curveDetail()	N/A	 Changes the sampling rate of Catmull-Rom curves
curvePoint()	N/A	 Evaluates one coordinate of a point of a Catmull-Rom curve
curveTangent()	N/A	 Evaluates one coordinate of a tangent of a Catmull-Rom curve
curveTightness()	N/A	 Changes the tightness of Catmull-Rom curves

strokeCap()	N/A	
strokeJoin()	N/A	

curveVertex()	N/A	 adds a Catmull-Rom arc to the shape
texture()	N/A	
textureMode()	N/A

noise()	N/A	 returns the perlin noise value at specified coordinates
binary()	N/A	 converts a value to a string in binary notation
hex()	N/A	 converts a value to a string in hexadecimal notation
unbinary()	N/A	 converts a string in binary notation to its decimal value
unhex()	N/A	 converts a string in hexadecimal notation to its decimal value
byte()	N/A	 converts a char or int to its byte representation

printMatrix()	N/A	 prints the current transformation matrix
shearX()	N/A	 shears a shape around the x axis
shearY()	N/A	 shears a shape around the y axis

normal()	N/A	 sets the normal vector for subsequent vertices

printCamera()	N/A	 prints the current transformation matrix
getProjection()	N/A	 returns the PROJECTION matrix
printProjection()	N/A	 prints the current projection matrix
endCamera()	N/A
frustum()	N/A
beginCamera()	N/A

modelX();
modelY();
modelZ();


Image
Processing	cprocessing	Description
createImage()	N/A	 creates an empty PImage object
filter()	N/A	 applies a filter to the display window
image()	N/A	 displays a PImage object
imageMode()	N/A	 changes the semantics of the arguments of image()
loadImage()	N/A	 loads an image into a PImage object
loadPixels()	N/A	 loads the current canvas data into screen.pixels
updatePixels()	N/A	 displays the data from screen.pixels
get()	N/A	 returns a copy, a part of a pixel of the screen


Text
Processing	cprocessing	Description
textAlign()	N/A	 changes the text alignment attributes
createFont()	N/A	 creates a font
textFont()	N/A	 sets the received font as current font
htmlText()	N/A	 draws the html text at the given position
text()	N/A	 draws the text at the given position
textSize()	N/A	 changes the current font size
textWidth()	N/A	 returns the width of the received string rendered in the current font
textAscent()	N/A	 returns the ascent of the current font
textDescent()	N/A	 returns the descent of the current font
